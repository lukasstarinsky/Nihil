#pragma once

#include "OpenGLCommon.hpp"

#define FOR_OPENGL_FUNCTIONS(ACTION) \
    ACTION(PFNGLCREATESHADERPROC, glCreateShader) \
    ACTION(PFNGLDEBUGMESSAGECALLBACKPROC, glDebugMessageCallback) \
    ACTION(PFNGLSHADERBINARYPROC, glShaderBinary) \
    ACTION(PFNGLSPECIALIZESHADERPROC, glSpecializeShader) \
    ACTION(PFNGLUSEPROGRAMPROC, glUseProgram) \
    ACTION(PFNGLGETSHADERIVPROC, glGetShaderiv) \
    ACTION(PFNGLDELETESHADERPROC, glDeleteShader) \
    ACTION(PFNGLCREATEPROGRAMPROC, glCreateProgram) \
    ACTION(PFNGLDELETEPROGRAMPROC, glDeleteProgram) \
    ACTION(PFNGLATTACHSHADERPROC, glAttachShader) \
    ACTION(PFNGLLINKPROGRAMPROC, glLinkProgram) \
    ACTION(PFNGLCREATEVERTEXARRAYSPROC, glCreateVertexArrays) \
    ACTION(PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays) \
    ACTION(PFNGLBUFFERDATAPROC, glBufferData) \
    ACTION(PFNGLCREATEBUFFERSPROC, glCreateBuffers) \
    ACTION(PFNGLCREATETEXTURESPROC, glCreateTextures) \
    ACTION(PFNGLTEXTUREPARAMETERIPROC, glTextureParameteri) \
    ACTION(PFNGLTEXTURESTORAGE2DPROC, glTextureStorage2D) \
    ACTION(PFNGLTEXTURESUBIMAGE2DPROC, glTextureSubImage2D) \
    ACTION(PFNGLBINDTEXTUREUNITPROC, glBindTextureUnit) \
    ACTION(PFNGLDELETEBUFFERSPROC, glDeleteBuffers) \
    ACTION(PFNGLNAMEDBUFFERSTORAGEPROC, glNamedBufferStorage) \
    ACTION(PFNGLNAMEDBUFFERDATAPROC, glNamedBufferData) \
    ACTION(PFNGLNAMEDBUFFERSUBDATAPROC, glNamedBufferSubData) \
    ACTION(PFNGLBINDBUFFERBASEPROC, glBindBufferBase) \
    ACTION(PFNGLGETPROGRAMIVPROC, glGetProgramiv) \
    ACTION(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray) \
    ACTION(PFNGLBINDBUFFERPROC, glBindBuffer) \
    ACTION(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer) \
    ACTION(PFNGLVERTEXARRAYVERTEXBUFFERPROC, glVertexArrayVertexBuffer) \
    ACTION(PFNGLVERTEXARRAYELEMENTBUFFERPROC, glVertexArrayElementBuffer) \
    ACTION(PFNGLUNIFORMMATRIX4FVPROC, glUniformMatrix4fv) \
    ACTION(PFNGLENABLEVERTEXARRAYATTRIBPROC, glEnableVertexArrayAttrib) \
    ACTION(PFNGLVERTEXARRAYATTRIBFORMATPROC, glVertexArrayAttribFormat) \
    ACTION(PFNGLVERTEXARRAYATTRIBBINDINGPROC, glVertexArrayAttribBinding) \
    ACTION(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray)

#define FOR_OPENGL_WGL_FUNCTIONS(ACTION) \
    ACTION(PFNWGLCREATECONTEXTATTRIBSARBPROC, wglCreateContextAttribsARB) \
    ACTION(PFNWGLCHOOSEPIXELFORMATARBPROC, wglChoosePixelFormatARB) \

#define RESOLVE_GL_FUNCTION_DECLARATION(type, name) inline type name;

FOR_OPENGL_FUNCTIONS(RESOLVE_GL_FUNCTION_DECLARATION)

#ifdef NIHIL_PLATFORM_WINDOWS
FOR_OPENGL_WGL_FUNCTIONS(RESOLVE_GL_FUNCTION_DECLARATION)

namespace OpenGLLoader
{
    void LoadWGLFunctions(const PlatformState& platformState);
}
#endif

namespace OpenGLLoader
{
    void LoadGLFunctions();
}